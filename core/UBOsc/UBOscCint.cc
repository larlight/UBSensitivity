//
// File generated by rootcint at Wed Oct  1 10:29:40 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME UBOscCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "UBOscCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace lar1 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::lar1::FluxRW FluxRW;
      #else
      class FluxRW  {
         public:
         //friend XX;
         double fBinSize; //
         vector< Double_t > fGS[4][4]; //fGS[ntype][ptype]
         vector< Double_t > fMB[4][4]; //fMB[ntype][ptype]
      };
      #endif
      } 
      namespace lar1 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::lar1::FluxRWnubar FluxRWnubar;
      #else
      class FluxRWnubar  {
         public:
         //friend XX;
         double fBinSize; //
         vector< Double_t > fGS[4][4]; //fGS[ntype][ptype]
         vector< Double_t > fMB[4][4]; //fMB[ntype][ptype]
      };
      #endif
      } 
      namespace gan {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::gan::LorentzVectorLight LorentzVectorLight;
      #else
      class LorentzVectorLight  {
         public:
         //friend XX;
         float fX; //
         float fY; //
         float fZ; //
         float fT; //
      };
      #endif
      } 
      namespace lar1 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::lar1::Utils Utils;
      #else
      class Utils  {
         public:
         //friend XX;
         ::lar1::FluxRW fluxrw_nu; //
         ::lar1::FluxRWnubar fluxrw_nubar; //
         double PotNormNubar; //
         double PotNormNu; //
         double fidCut_x; //
         double fidCut_y; //
         double fidCut_zUp; //
         double fidCut_zDown; //
         double nd_xmin; //
         double nd_xmax; //
         double nd_ymin; //
         double nd_ymax; //
         double nd_zmin; //
         double nd_zmax; //
         double nd_long_xmin; //
         double nd_long_xmax; //
         double nd_long_ymin; //
         double nd_long_ymax; //
         double nd_long_zmin; //
         double nd_long_zmax; //
         double ub_xmin; //
         double ub_xmax; //
         double ub_ymin; //
         double ub_ymax; //
         double ub_zmin; //
         double ub_zmax; //
         double fd_xmin; //
         double fd_xmax; //
         double fd_ymin; //
         double fd_ymax; //
         double fd_zmin; //
         double fd_zmax; //
         double ic_xmin; //
         double ic_xmax; //
         double ic_ymin; //
         double ic_ymax; //
         double ic_zmin; //
         double ic_zmax; //
         ::TVector3 kMB_center; //
         double kMB_radius; //
         double kMB_fidcut; //
      };
      #endif
      } 
      namespace lar1 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::lar1::NtupleReprocessing NtupleReprocessing;
      #else
      class NtupleReprocessing  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~NtupleReprocessing() throw() {};
         ::TFile* infile; //
         ::TTree* fChain; //!pointer to the analyzed TTree or TChain
         int fCurrent; //!current Tree number in a TChain
         int iflux; //
         int ibkg; //
         int nuchan; //
         int inno; //
         double enugen; //
         double energy; //
         double nuleng; //
         int parid; //
         int ndecay; //
         double wgt; //
         int NPi0; //
         int NPi0FinalState; //
         int NGamma; //
         char FoundPhotons; //
         int isCC; //
         int mode; //
         vector< Int_t >* geniePDG; //
         vector< Double_t >* genieE; //
         vector< Double_t >* geniePx; //
         vector< Double_t >* geniePy; //
         vector< Double_t >* geniePz; //
         double Vx; //
         double Vy; //
         double Vz; //
         double ParVx; //
         double ParVy; //
         double ParVz; //
         double ParPx; //
         double ParPy; //
         double ParPz; //
         double LepPx; //Added these to store the lepton mometum.
         double LepPy; //Added these to store the lepton mometum.
         double LepPz; //Added these to store the lepton mometum.
         double LepAngle; //This will store the scattering angle between lepton and neutrino.
         double ThetaLep; //
         double PhiLep; //
         double ThetaLepSmeared; //
         double PhiLepSmeared; //
         double Elep; //
         double ElepSmeared; //
         vector< ::gan::LorentzVectorLight >* MuonPos; //
         vector< ::gan::LorentzVectorLight >* MuonMom; //
         vector< ::gan::LorentzVectorLight >* p1PhotonConversionPos; //
         vector< ::gan::LorentzVectorLight >* p1PhotonConversionMom; //
         vector< ::gan::LorentzVectorLight >* p2PhotonConversionPos; //
         vector< ::gan::LorentzVectorLight >* p2PhotonConversionMom; //
         vector< ::gan::LorentzVectorLight >* miscPhotonConversionPos; //
         vector< ::gan::LorentzVectorLight >* miscPhotonConversionMom; //
         vector< ::gan::LorentzVectorLight >* PionPos; //
         vector< ::gan::LorentzVectorLight >* PionMom; //
         ::TBranch* b_iflux; //!
         ::TBranch* b_ibkg; //!
         ::TBranch* b_nuchan; //!
         ::TBranch* b_inno; //!
         ::TBranch* b_enugen; //!
         ::TBranch* b_energy; //!
         ::TBranch* b_nuleng; //!
         ::TBranch* b_parid; //!
         ::TBranch* b_ndecay; //!
         ::TBranch* b_wgt; //!
         ::TBranch* b_NPi0; //!
         ::TBranch* b_NPi0FinalState; //!
         ::TBranch* b_NGamma; //!
         ::TBranch* b_FoundAllPhotons; //!
         ::TBranch* b_isCC; //!
         ::TBranch* b_mode; //!
         ::TBranch* b_Vx; //!
         ::TBranch* b_Vy; //!
         ::TBranch* b_Vz; //!
         ::TBranch* b_ParVx; //!
         ::TBranch* b_ParVy; //!
         ::TBranch* b_ParVz; //!
         ::TBranch* b_ParPx; //!
         ::TBranch* b_ParPy; //!
         ::TBranch* b_ParPz; //!
         ::TBranch* b_geniePDG; //!
         ::TBranch* b_genieE; //!
         ::TBranch* b_geniePx; //!
         ::TBranch* b_geniePy; //!
         ::TBranch* b_geniePz; //!
         ::TBranch* b_ThetaLep; //!
         ::TBranch* b_PhiLep; //!
         ::TBranch* b_ThetaLepSmeared; //!
         ::TBranch* b_PhiLepSmeared; //!
         ::TBranch* b_Elep; //!
         ::TBranch* b_ElepSmeared; //!
         ::TBranch* b_MuonPos; //!
         ::TBranch* b_MuonMom; //!
         ::TBranch* b_p1PhotonConversionPos; //!
         ::TBranch* b_p1PhotonConversionMom; //!
         ::TBranch* b_p2PhotonConversionPos; //!
         ::TBranch* b_p2PhotonConversionMom; //!
         ::TBranch* b_miscPhotonConversionPos; //!
         ::TBranch* b_miscPhotonConversionMom; //!
         ::TBranch* b_PionPos; //!
         ::TBranch* b_PionMom; //!
         ::lar1::Utils utils; //
         bool oscNeutrinos; //
         bool oscAntiNeutrinos; //
         bool detNeutrinos; //
         bool detAntiNeutrinos; //
         string specialNameText; //
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::UBOsc UBOsc;
      #else
      class UBOsc  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~UBOsc() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void lar1cLcLFluxRW_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void lar1cLcLFluxRW_Dictionary();
   static void *new_lar1cLcLFluxRW(void *p = 0);
   static void *newArray_lar1cLcLFluxRW(Long_t size, void *p);
   static void delete_lar1cLcLFluxRW(void *p);
   static void deleteArray_lar1cLcLFluxRW(void *p);
   static void destruct_lar1cLcLFluxRW(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lar1::FluxRW*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::lar1::FluxRW) == sizeof(::ROOT::Shadow::lar1::FluxRW));
      ::lar1::FluxRW *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lar1::FluxRW),0);
      static ::ROOT::TGenericClassInfo 
         instance("lar1::FluxRW", "./FluxRW.hh", 9,
                  typeid(::lar1::FluxRW), DefineBehavior(ptr, ptr),
                  &lar1cLcLFluxRW_ShowMembers, &lar1cLcLFluxRW_Dictionary, isa_proxy, 4,
                  sizeof(::lar1::FluxRW) );
      instance.SetNew(&new_lar1cLcLFluxRW);
      instance.SetNewArray(&newArray_lar1cLcLFluxRW);
      instance.SetDelete(&delete_lar1cLcLFluxRW);
      instance.SetDeleteArray(&deleteArray_lar1cLcLFluxRW);
      instance.SetDestructor(&destruct_lar1cLcLFluxRW);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lar1::FluxRW*)
   {
      return GenerateInitInstanceLocal((::lar1::FluxRW*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lar1::FluxRW*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void lar1cLcLFluxRW_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lar1::FluxRW*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void lar1cLcLFluxRWnubar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void lar1cLcLFluxRWnubar_Dictionary();
   static void *new_lar1cLcLFluxRWnubar(void *p = 0);
   static void *newArray_lar1cLcLFluxRWnubar(Long_t size, void *p);
   static void delete_lar1cLcLFluxRWnubar(void *p);
   static void deleteArray_lar1cLcLFluxRWnubar(void *p);
   static void destruct_lar1cLcLFluxRWnubar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lar1::FluxRWnubar*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::lar1::FluxRWnubar) == sizeof(::ROOT::Shadow::lar1::FluxRWnubar));
      ::lar1::FluxRWnubar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lar1::FluxRWnubar),0);
      static ::ROOT::TGenericClassInfo 
         instance("lar1::FluxRWnubar", "./FluxRWnubar.hh", 9,
                  typeid(::lar1::FluxRWnubar), DefineBehavior(ptr, ptr),
                  &lar1cLcLFluxRWnubar_ShowMembers, &lar1cLcLFluxRWnubar_Dictionary, isa_proxy, 4,
                  sizeof(::lar1::FluxRWnubar) );
      instance.SetNew(&new_lar1cLcLFluxRWnubar);
      instance.SetNewArray(&newArray_lar1cLcLFluxRWnubar);
      instance.SetDelete(&delete_lar1cLcLFluxRWnubar);
      instance.SetDeleteArray(&deleteArray_lar1cLcLFluxRWnubar);
      instance.SetDestructor(&destruct_lar1cLcLFluxRWnubar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lar1::FluxRWnubar*)
   {
      return GenerateInitInstanceLocal((::lar1::FluxRWnubar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lar1::FluxRWnubar*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void lar1cLcLFluxRWnubar_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lar1::FluxRWnubar*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void gancLcLLorentzVectorLight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void gancLcLLorentzVectorLight_Dictionary();
   static void *new_gancLcLLorentzVectorLight(void *p = 0);
   static void *newArray_gancLcLLorentzVectorLight(Long_t size, void *p);
   static void delete_gancLcLLorentzVectorLight(void *p);
   static void deleteArray_gancLcLLorentzVectorLight(void *p);
   static void destruct_gancLcLLorentzVectorLight(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::gan::LorentzVectorLight*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::gan::LorentzVectorLight) == sizeof(::ROOT::Shadow::gan::LorentzVectorLight));
      ::gan::LorentzVectorLight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::gan::LorentzVectorLight),0);
      static ::ROOT::TGenericClassInfo 
         instance("gan::LorentzVectorLight", "./LorentzVectorLight.hh", 14,
                  typeid(::gan::LorentzVectorLight), DefineBehavior(ptr, ptr),
                  &gancLcLLorentzVectorLight_ShowMembers, &gancLcLLorentzVectorLight_Dictionary, isa_proxy, 4,
                  sizeof(::gan::LorentzVectorLight) );
      instance.SetNew(&new_gancLcLLorentzVectorLight);
      instance.SetNewArray(&newArray_gancLcLLorentzVectorLight);
      instance.SetDelete(&delete_gancLcLLorentzVectorLight);
      instance.SetDeleteArray(&deleteArray_gancLcLLorentzVectorLight);
      instance.SetDestructor(&destruct_gancLcLLorentzVectorLight);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::gan::LorentzVectorLight*)
   {
      return GenerateInitInstanceLocal((::gan::LorentzVectorLight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gan::LorentzVectorLight*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void gancLcLLorentzVectorLight_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::gan::LorentzVectorLight*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void lar1cLcLUtils_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void lar1cLcLUtils_Dictionary();
   static void *new_lar1cLcLUtils(void *p = 0);
   static void *newArray_lar1cLcLUtils(Long_t size, void *p);
   static void delete_lar1cLcLUtils(void *p);
   static void deleteArray_lar1cLcLUtils(void *p);
   static void destruct_lar1cLcLUtils(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lar1::Utils*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::lar1::Utils) == sizeof(::ROOT::Shadow::lar1::Utils));
      ::lar1::Utils *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lar1::Utils),0);
      static ::ROOT::TGenericClassInfo 
         instance("lar1::Utils", "./Utils.hh", 16,
                  typeid(::lar1::Utils), DefineBehavior(ptr, ptr),
                  &lar1cLcLUtils_ShowMembers, &lar1cLcLUtils_Dictionary, isa_proxy, 4,
                  sizeof(::lar1::Utils) );
      instance.SetNew(&new_lar1cLcLUtils);
      instance.SetNewArray(&newArray_lar1cLcLUtils);
      instance.SetDelete(&delete_lar1cLcLUtils);
      instance.SetDeleteArray(&deleteArray_lar1cLcLUtils);
      instance.SetDestructor(&destruct_lar1cLcLUtils);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lar1::Utils*)
   {
      return GenerateInitInstanceLocal((::lar1::Utils*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lar1::Utils*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void lar1cLcLUtils_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lar1::Utils*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void lar1cLcLNtupleReprocessing_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void lar1cLcLNtupleReprocessing_Dictionary();
   static void *new_lar1cLcLNtupleReprocessing(void *p = 0);
   static void *newArray_lar1cLcLNtupleReprocessing(Long_t size, void *p);
   static void delete_lar1cLcLNtupleReprocessing(void *p);
   static void deleteArray_lar1cLcLNtupleReprocessing(void *p);
   static void destruct_lar1cLcLNtupleReprocessing(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lar1::NtupleReprocessing*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::lar1::NtupleReprocessing) == sizeof(::ROOT::Shadow::lar1::NtupleReprocessing));
      ::lar1::NtupleReprocessing *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lar1::NtupleReprocessing),0);
      static ::ROOT::TGenericClassInfo 
         instance("lar1::NtupleReprocessing", "./NtupleReprocessing.hh", 28,
                  typeid(::lar1::NtupleReprocessing), DefineBehavior(ptr, ptr),
                  &lar1cLcLNtupleReprocessing_ShowMembers, &lar1cLcLNtupleReprocessing_Dictionary, isa_proxy, 4,
                  sizeof(::lar1::NtupleReprocessing) );
      instance.SetNew(&new_lar1cLcLNtupleReprocessing);
      instance.SetNewArray(&newArray_lar1cLcLNtupleReprocessing);
      instance.SetDelete(&delete_lar1cLcLNtupleReprocessing);
      instance.SetDeleteArray(&deleteArray_lar1cLcLNtupleReprocessing);
      instance.SetDestructor(&destruct_lar1cLcLNtupleReprocessing);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lar1::NtupleReprocessing*)
   {
      return GenerateInitInstanceLocal((::lar1::NtupleReprocessing*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lar1::NtupleReprocessing*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void lar1cLcLNtupleReprocessing_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lar1::NtupleReprocessing*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void UBOsc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void UBOsc_Dictionary();
   static void *new_UBOsc(void *p = 0);
   static void *newArray_UBOsc(Long_t size, void *p);
   static void delete_UBOsc(void *p);
   static void deleteArray_UBOsc(void *p);
   static void destruct_UBOsc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::UBOsc*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::UBOsc) == sizeof(::ROOT::Shadow::UBOsc));
      ::UBOsc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::UBOsc),0);
      static ::ROOT::TGenericClassInfo 
         instance("UBOsc", "./UBOsc.hh", 24,
                  typeid(::UBOsc), DefineBehavior(ptr, ptr),
                  &UBOsc_ShowMembers, &UBOsc_Dictionary, isa_proxy, 4,
                  sizeof(::UBOsc) );
      instance.SetNew(&new_UBOsc);
      instance.SetNewArray(&newArray_UBOsc);
      instance.SetDelete(&delete_UBOsc);
      instance.SetDeleteArray(&deleteArray_UBOsc);
      instance.SetDestructor(&destruct_UBOsc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::UBOsc*)
   {
      return GenerateInitInstanceLocal((::UBOsc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::UBOsc*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void UBOsc_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::UBOsc*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void gancLcLLorentzVectorLight_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class gan::LorentzVectorLight.
      typedef ::ROOT::Shadow::gan::LorentzVectorLight ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::gan::LorentzVectorLight*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &sobj->fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &sobj->fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &sobj->fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT", &sobj->fT);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_gancLcLLorentzVectorLight(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gan::LorentzVectorLight : new ::gan::LorentzVectorLight;
   }
   static void *newArray_gancLcLLorentzVectorLight(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gan::LorentzVectorLight[nElements] : new ::gan::LorentzVectorLight[nElements];
   }
   // Wrapper around operator delete
   static void delete_gancLcLLorentzVectorLight(void *p) {
      delete ((::gan::LorentzVectorLight*)p);
   }
   static void deleteArray_gancLcLLorentzVectorLight(void *p) {
      delete [] ((::gan::LorentzVectorLight*)p);
   }
   static void destruct_gancLcLLorentzVectorLight(void *p) {
      typedef ::gan::LorentzVectorLight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::gan::LorentzVectorLight

//______________________________________________________________________________
namespace ROOT {
   void lar1cLcLFluxRW_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class lar1::FluxRW.
      typedef ::ROOT::Shadow::lar1::FluxRW ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::lar1::FluxRW*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinSize", &sobj->fBinSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGS[4][4]", sobj->fGS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMB[4][4]", sobj->fMB);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lar1cLcLFluxRW(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::FluxRW : new ::lar1::FluxRW;
   }
   static void *newArray_lar1cLcLFluxRW(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::FluxRW[nElements] : new ::lar1::FluxRW[nElements];
   }
   // Wrapper around operator delete
   static void delete_lar1cLcLFluxRW(void *p) {
      delete ((::lar1::FluxRW*)p);
   }
   static void deleteArray_lar1cLcLFluxRW(void *p) {
      delete [] ((::lar1::FluxRW*)p);
   }
   static void destruct_lar1cLcLFluxRW(void *p) {
      typedef ::lar1::FluxRW current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lar1::FluxRW

//______________________________________________________________________________
namespace ROOT {
   void lar1cLcLFluxRWnubar_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class lar1::FluxRWnubar.
      typedef ::ROOT::Shadow::lar1::FluxRWnubar ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::lar1::FluxRWnubar*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinSize", &sobj->fBinSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGS[4][4]", sobj->fGS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMB[4][4]", sobj->fMB);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lar1cLcLFluxRWnubar(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::FluxRWnubar : new ::lar1::FluxRWnubar;
   }
   static void *newArray_lar1cLcLFluxRWnubar(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::FluxRWnubar[nElements] : new ::lar1::FluxRWnubar[nElements];
   }
   // Wrapper around operator delete
   static void delete_lar1cLcLFluxRWnubar(void *p) {
      delete ((::lar1::FluxRWnubar*)p);
   }
   static void deleteArray_lar1cLcLFluxRWnubar(void *p) {
      delete [] ((::lar1::FluxRWnubar*)p);
   }
   static void destruct_lar1cLcLFluxRWnubar(void *p) {
      typedef ::lar1::FluxRWnubar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lar1::FluxRWnubar

//______________________________________________________________________________
namespace ROOT {
   void lar1cLcLUtils_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class lar1::Utils.
      typedef ::ROOT::Shadow::lar1::Utils ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::lar1::Utils*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fluxrw_nu", (void*)&sobj->fluxrw_nu);
      R__insp.InspectMember("lar1::FluxRW", (void*)&sobj->fluxrw_nu, "fluxrw_nu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fluxrw_nubar", (void*)&sobj->fluxrw_nubar);
      R__insp.InspectMember("lar1::FluxRWnubar", (void*)&sobj->fluxrw_nubar, "fluxrw_nubar.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PotNormNubar", &sobj->PotNormNubar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PotNormNu", &sobj->PotNormNu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidCut_x", &sobj->fidCut_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidCut_y", &sobj->fidCut_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidCut_zUp", &sobj->fidCut_zUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidCut_zDown", &sobj->fidCut_zDown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_xmin", &sobj->nd_xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_xmax", &sobj->nd_xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_ymin", &sobj->nd_ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_ymax", &sobj->nd_ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_zmin", &sobj->nd_zmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_zmax", &sobj->nd_zmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_long_xmin", &sobj->nd_long_xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_long_xmax", &sobj->nd_long_xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_long_ymin", &sobj->nd_long_ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_long_ymax", &sobj->nd_long_ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_long_zmin", &sobj->nd_long_zmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nd_long_zmax", &sobj->nd_long_zmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ub_xmin", &sobj->ub_xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ub_xmax", &sobj->ub_xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ub_ymin", &sobj->ub_ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ub_ymax", &sobj->ub_ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ub_zmin", &sobj->ub_zmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ub_zmax", &sobj->ub_zmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fd_xmin", &sobj->fd_xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fd_xmax", &sobj->fd_xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fd_ymin", &sobj->fd_ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fd_ymax", &sobj->fd_ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fd_zmin", &sobj->fd_zmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fd_zmax", &sobj->fd_zmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ic_xmin", &sobj->ic_xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ic_xmax", &sobj->ic_xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ic_ymin", &sobj->ic_ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ic_ymax", &sobj->ic_ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ic_zmin", &sobj->ic_zmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ic_zmax", &sobj->ic_zmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kMB_center", &sobj->kMB_center);
      R__insp.InspectMember(sobj->kMB_center, "kMB_center.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kMB_radius", &sobj->kMB_radius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kMB_fidcut", &sobj->kMB_fidcut);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lar1cLcLUtils(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::Utils : new ::lar1::Utils;
   }
   static void *newArray_lar1cLcLUtils(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::Utils[nElements] : new ::lar1::Utils[nElements];
   }
   // Wrapper around operator delete
   static void delete_lar1cLcLUtils(void *p) {
      delete ((::lar1::Utils*)p);
   }
   static void deleteArray_lar1cLcLUtils(void *p) {
      delete [] ((::lar1::Utils*)p);
   }
   static void destruct_lar1cLcLUtils(void *p) {
      typedef ::lar1::Utils current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lar1::Utils

//______________________________________________________________________________
namespace ROOT {
   void lar1cLcLNtupleReprocessing_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class lar1::NtupleReprocessing.
      typedef ::ROOT::Shadow::lar1::NtupleReprocessing ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::lar1::NtupleReprocessing*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*infile", &sobj->infile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &sobj->fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &sobj->fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iflux", &sobj->iflux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ibkg", &sobj->ibkg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuchan", &sobj->nuchan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inno", &sobj->inno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enugen", &sobj->enugen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &sobj->energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuleng", &sobj->nuleng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parid", &sobj->parid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndecay", &sobj->ndecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wgt", &sobj->wgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPi0", &sobj->NPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPi0FinalState", &sobj->NPi0FinalState);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NGamma", &sobj->NGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FoundPhotons", &sobj->FoundPhotons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isCC", &sobj->isCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &sobj->mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*geniePDG", &sobj->geniePDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*genieE", &sobj->genieE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*geniePx", &sobj->geniePx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*geniePy", &sobj->geniePy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*geniePz", &sobj->geniePz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vx", &sobj->Vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vy", &sobj->Vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vz", &sobj->Vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParVx", &sobj->ParVx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParVy", &sobj->ParVy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParVz", &sobj->ParVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParPx", &sobj->ParPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParPy", &sobj->ParPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParPz", &sobj->ParPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LepPx", &sobj->LepPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LepPy", &sobj->LepPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LepPz", &sobj->LepPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LepAngle", &sobj->LepAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThetaLep", &sobj->ThetaLep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PhiLep", &sobj->PhiLep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThetaLepSmeared", &sobj->ThetaLepSmeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PhiLepSmeared", &sobj->PhiLepSmeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Elep", &sobj->Elep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElepSmeared", &sobj->ElepSmeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MuonPos", &sobj->MuonPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MuonMom", &sobj->MuonMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p1PhotonConversionPos", &sobj->p1PhotonConversionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p1PhotonConversionMom", &sobj->p1PhotonConversionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p2PhotonConversionPos", &sobj->p2PhotonConversionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p2PhotonConversionMom", &sobj->p2PhotonConversionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*miscPhotonConversionPos", &sobj->miscPhotonConversionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*miscPhotonConversionMom", &sobj->miscPhotonConversionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PionPos", &sobj->PionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PionMom", &sobj->PionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_iflux", &sobj->b_iflux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ibkg", &sobj->b_ibkg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nuchan", &sobj->b_nuchan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_inno", &sobj->b_inno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_enugen", &sobj->b_enugen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_energy", &sobj->b_energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nuleng", &sobj->b_nuleng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_parid", &sobj->b_parid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ndecay", &sobj->b_ndecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_wgt", &sobj->b_wgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_NPi0", &sobj->b_NPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_NPi0FinalState", &sobj->b_NPi0FinalState);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_NGamma", &sobj->b_NGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_FoundAllPhotons", &sobj->b_FoundAllPhotons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_isCC", &sobj->b_isCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mode", &sobj->b_mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Vx", &sobj->b_Vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Vy", &sobj->b_Vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Vz", &sobj->b_Vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ParVx", &sobj->b_ParVx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ParVy", &sobj->b_ParVy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ParVz", &sobj->b_ParVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ParPx", &sobj->b_ParPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ParPy", &sobj->b_ParPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ParPz", &sobj->b_ParPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_geniePDG", &sobj->b_geniePDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_genieE", &sobj->b_genieE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_geniePx", &sobj->b_geniePx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_geniePy", &sobj->b_geniePy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_geniePz", &sobj->b_geniePz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ThetaLep", &sobj->b_ThetaLep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PhiLep", &sobj->b_PhiLep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ThetaLepSmeared", &sobj->b_ThetaLepSmeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PhiLepSmeared", &sobj->b_PhiLepSmeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Elep", &sobj->b_Elep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ElepSmeared", &sobj->b_ElepSmeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_MuonPos", &sobj->b_MuonPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_MuonMom", &sobj->b_MuonMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_p1PhotonConversionPos", &sobj->b_p1PhotonConversionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_p1PhotonConversionMom", &sobj->b_p1PhotonConversionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_p2PhotonConversionPos", &sobj->b_p2PhotonConversionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_p2PhotonConversionMom", &sobj->b_p2PhotonConversionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_miscPhotonConversionPos", &sobj->b_miscPhotonConversionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_miscPhotonConversionMom", &sobj->b_miscPhotonConversionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PionPos", &sobj->b_PionPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PionMom", &sobj->b_PionMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utils", (void*)&sobj->utils);
      R__insp.InspectMember("lar1::Utils", (void*)&sobj->utils, "utils.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oscNeutrinos", &sobj->oscNeutrinos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oscAntiNeutrinos", &sobj->oscAntiNeutrinos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detNeutrinos", &sobj->detNeutrinos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detAntiNeutrinos", &sobj->detAntiNeutrinos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "specialNameText", (void*)&sobj->specialNameText);
      R__insp.InspectMember("string", (void*)&sobj->specialNameText, "specialNameText.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lar1cLcLNtupleReprocessing(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::NtupleReprocessing : new ::lar1::NtupleReprocessing;
   }
   static void *newArray_lar1cLcLNtupleReprocessing(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lar1::NtupleReprocessing[nElements] : new ::lar1::NtupleReprocessing[nElements];
   }
   // Wrapper around operator delete
   static void delete_lar1cLcLNtupleReprocessing(void *p) {
      delete ((::lar1::NtupleReprocessing*)p);
   }
   static void deleteArray_lar1cLcLNtupleReprocessing(void *p) {
      delete [] ((::lar1::NtupleReprocessing*)p);
   }
   static void destruct_lar1cLcLNtupleReprocessing(void *p) {
      typedef ::lar1::NtupleReprocessing current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lar1::NtupleReprocessing

//______________________________________________________________________________
namespace ROOT {
   void UBOsc_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class UBOsc.
      typedef ::ROOT::Shadow::UBOsc ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::UBOsc*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_UBOsc(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::UBOsc : new ::UBOsc;
   }
   static void *newArray_UBOsc(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::UBOsc[nElements] : new ::UBOsc[nElements];
   }
   // Wrapper around operator delete
   static void delete_UBOsc(void *p) {
      delete ((::UBOsc*)p);
   }
   static void deleteArray_UBOsc(void *p) {
      delete [] ((::UBOsc*)p);
   }
   static void destruct_UBOsc(void *p) {
      typedef ::UBOsc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::UBOsc

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEgancLcLLorentzVectorLightgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEgancLcLLorentzVectorLightgR_Dictionary();
   static void *new_vectorlEgancLcLLorentzVectorLightgR(void *p = 0);
   static void *newArray_vectorlEgancLcLLorentzVectorLightgR(Long_t size, void *p);
   static void delete_vectorlEgancLcLLorentzVectorLightgR(void *p);
   static void deleteArray_vectorlEgancLcLLorentzVectorLightgR(void *p);
   static void destruct_vectorlEgancLcLLorentzVectorLightgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<gan::LorentzVectorLight>*)
   {
      vector<gan::LorentzVectorLight> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<gan::LorentzVectorLight>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<gan::LorentzVectorLight>", -2, "prec_stl/vector", 49,
                  typeid(vector<gan::LorentzVectorLight>), DefineBehavior(ptr, ptr),
                  0, &vectorlEgancLcLLorentzVectorLightgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<gan::LorentzVectorLight>) );
      instance.SetNew(&new_vectorlEgancLcLLorentzVectorLightgR);
      instance.SetNewArray(&newArray_vectorlEgancLcLLorentzVectorLightgR);
      instance.SetDelete(&delete_vectorlEgancLcLLorentzVectorLightgR);
      instance.SetDeleteArray(&deleteArray_vectorlEgancLcLLorentzVectorLightgR);
      instance.SetDestructor(&destruct_vectorlEgancLcLLorentzVectorLightgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<gan::LorentzVectorLight> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<gan::LorentzVectorLight>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEgancLcLLorentzVectorLightgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<gan::LorentzVectorLight>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEgancLcLLorentzVectorLightgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<gan::LorentzVectorLight> : new vector<gan::LorentzVectorLight>;
   }
   static void *newArray_vectorlEgancLcLLorentzVectorLightgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<gan::LorentzVectorLight>[nElements] : new vector<gan::LorentzVectorLight>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEgancLcLLorentzVectorLightgR(void *p) {
      delete ((vector<gan::LorentzVectorLight>*)p);
   }
   static void deleteArray_vectorlEgancLcLLorentzVectorLightgR(void *p) {
      delete [] ((vector<gan::LorentzVectorLight>*)p);
   }
   static void destruct_vectorlEgancLcLLorentzVectorLightgR(void *p) {
      typedef vector<gan::LorentzVectorLight> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<gan::LorentzVectorLight>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* UBOscCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableUBOscCint();

extern "C" void G__set_cpp_environmentUBOscCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("FluxRW.hh");
  G__add_compiledheader("FluxRWnubar.hh");
  G__add_compiledheader("LorentzVectorLight.hh");
  G__add_compiledheader("NtupleReprocessing.hh");
  G__add_compiledheader("UBOsc-TypeDef.hh");
  G__add_compiledheader("UBOsc.hh");
  G__add_compiledheader("Utils.hh");
  G__cpp_reset_tagtableUBOscCint();
}
#include <new>
extern "C" int G__cpp_dllrevUBOscCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* lar1::FluxRW */
static int G__UBOscCint_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::FluxRW* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lar1::FluxRW[n];
     } else {
       p = new((void*) gvp) lar1::FluxRW[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lar1::FluxRW;
     } else {
       p = new((void*) gvp) lar1::FluxRW;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::FluxRW*) G__getstructoffset())->GetWeight((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((lar1::FluxRW*) G__getstructoffset())->GetWeightHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((lar1::FluxRW*) G__getstructoffset())->GetEnv(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UBOscCint_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lar1::FluxRW* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lar1::FluxRW(*(lar1::FluxRW*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lar1::FluxRW G__Tlar1cLcLFluxRW;
static int G__UBOscCint_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lar1::FluxRW*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lar1::FluxRW*) (soff+(sizeof(lar1::FluxRW)*i)))->~G__Tlar1cLcLFluxRW();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lar1::FluxRW*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lar1::FluxRW*) (soff))->~G__Tlar1cLcLFluxRW();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UBOscCint_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::FluxRW* dest = (lar1::FluxRW*) G__getstructoffset();
   *dest = *(lar1::FluxRW*) libp->para[0].ref;
   const lar1::FluxRW& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lar1::FluxRWnubar */
static int G__UBOscCint_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::FluxRWnubar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lar1::FluxRWnubar[n];
     } else {
       p = new((void*) gvp) lar1::FluxRWnubar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lar1::FluxRWnubar;
     } else {
       p = new((void*) gvp) lar1::FluxRWnubar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::FluxRWnubar*) G__getstructoffset())->GetWeight((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((lar1::FluxRWnubar*) G__getstructoffset())->GetWeightHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((lar1::FluxRWnubar*) G__getstructoffset())->GetEnv(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UBOscCint_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lar1::FluxRWnubar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lar1::FluxRWnubar(*(lar1::FluxRWnubar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lar1::FluxRWnubar G__Tlar1cLcLFluxRWnubar;
static int G__UBOscCint_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lar1::FluxRWnubar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lar1::FluxRWnubar*) (soff+(sizeof(lar1::FluxRWnubar)*i)))->~G__Tlar1cLcLFluxRWnubar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lar1::FluxRWnubar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lar1::FluxRWnubar*) (soff))->~G__Tlar1cLcLFluxRWnubar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UBOscCint_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::FluxRWnubar* dest = (lar1::FluxRWnubar*) G__getstructoffset();
   *dest = *(lar1::FluxRWnubar*) libp->para[0].ref;
   const lar1::FluxRWnubar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* gan::LorentzVectorLight */
static int G__UBOscCint_230_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gan::LorentzVectorLight* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gan::LorentzVectorLight[n];
     } else {
       p = new((void*) gvp) gan::LorentzVectorLight[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gan::LorentzVectorLight;
     } else {
       p = new((void*) gvp) gan::LorentzVectorLight;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gan::LorentzVectorLight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new gan::LorentzVectorLight(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) gan::LorentzVectorLight(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gan::LorentzVectorLight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new gan::LorentzVectorLight(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) gan::LorentzVectorLight(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gan::LorentzVectorLight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new gan::LorentzVectorLight(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) gan::LorentzVectorLight(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->Px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->Py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->Pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const gan::LorentzVectorLight*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetX((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetY((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetZ((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetT((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetPx((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetPy((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetPz((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_230_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gan::LorentzVectorLight*) G__getstructoffset())->SetE((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UBOscCint_230_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   gan::LorentzVectorLight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new gan::LorentzVectorLight(*(gan::LorentzVectorLight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gan::LorentzVectorLight G__TgancLcLLorentzVectorLight;
static int G__UBOscCint_230_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (gan::LorentzVectorLight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gan::LorentzVectorLight*) (soff+(sizeof(gan::LorentzVectorLight)*i)))->~G__TgancLcLLorentzVectorLight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (gan::LorentzVectorLight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((gan::LorentzVectorLight*) (soff))->~G__TgancLcLLorentzVectorLight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UBOscCint_230_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gan::LorentzVectorLight* dest = (gan::LorentzVectorLight*) G__getstructoffset();
   *dest = *(gan::LorentzVectorLight*) libp->para[0].ref;
   const gan::LorentzVectorLight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lar1::Utils */
static int G__UBOscCint_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::Utils* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lar1::Utils[n];
     } else {
       p = new((void*) gvp) lar1::Utils[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lar1::Utils;
     } else {
       p = new((void*) gvp) lar1::Utils;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetFluxWeight((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetTheta(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetTheta(*((TVector3*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetTheta((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *((TVector3*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetTheta((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetPhi(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetPhi(*((TVector3*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->NuEnergyCCQE((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->NuEnergyCCQE((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->NuEnergyCalo((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->NuEnergyCalo((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->NuEnergyCalo((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->NuEnergyCalo((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->NuEnergyCalo((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->VertexEnergy((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->VertexEnergy((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->VertexEnergy((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->VertexEnergy((vector<Int_t>*) G__int(libp->para[0]), (vector<Double_t>*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->TotalPhotonEnergy((Int_t) G__int(libp->para[0]), (vector<gan::LorentzVectorLight>*) G__int(libp->para[1])
, (vector<gan::LorentzVectorLight>*) G__int(libp->para[2]), (vector<gan::LorentzVectorLight>*) G__int(libp->para[3])
, (vector<gan::LorentzVectorLight>*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((lar1::Utils*) G__getstructoffset())->IsFiducial((Int_t) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((lar1::Utils*) G__getstructoffset())->IsFiducial((Int_t) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((lar1::Utils*) G__getstructoffset())->IsActive((Int_t) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((lar1::Utils*) G__getstructoffset())->IsActive((Int_t) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((lar1::Utils*) G__getstructoffset())->IsFiducialMB((Int_t) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((lar1::Utils*) G__getstructoffset())->IsFiducialMB((Int_t) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetFidMass((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetActiveMass((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lar1::Utils*) G__getstructoffset())->GetDetBoundary(
(Int_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetPOTNorm((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetPOTNormNuMI((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::Utils*) G__getstructoffset())->GetContainedLength(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((lar1::Utils*) G__getstructoffset())->ScaleFarDet((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((lar1::Utils*) G__getstructoffset())->ScaleFarDet();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_635_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((const lar1::Utils*) G__getstructoffset())->IntersectsPlane(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref
, *(TVector3*) libp->para[4].ref, (const bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((const lar1::Utils*) G__getstructoffset())->IntersectsPlane(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref
, *(TVector3*) libp->para[4].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UBOscCint_635_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lar1::Utils* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lar1::Utils(*(lar1::Utils*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lar1::Utils G__Tlar1cLcLUtils;
static int G__UBOscCint_635_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lar1::Utils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lar1::Utils*) (soff+(sizeof(lar1::Utils)*i)))->~G__Tlar1cLcLUtils();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lar1::Utils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lar1::Utils*) (soff))->~G__Tlar1cLcLUtils();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UBOscCint_635_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::Utils* dest = (lar1::Utils*) G__getstructoffset();
   *dest = *(lar1::Utils*) libp->para[0].ref;
   const lar1::Utils& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lar1::NtupleReprocessing */
static int G__UBOscCint_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::NtupleReprocessing* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lar1::NtupleReprocessing(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) lar1::NtupleReprocessing(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new lar1::NtupleReprocessing[n];
       } else {
         p = new((void*) gvp) lar1::NtupleReprocessing[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new lar1::NtupleReprocessing;
       } else {
         p = new((void*) gvp) lar1::NtupleReprocessing;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLNtupleReprocessing));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lar1::NtupleReprocessing*) G__getstructoffset())->Cut((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lar1::NtupleReprocessing*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((lar1::NtupleReprocessing*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Loop(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (bool) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Loop(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Loop(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Loop(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Loop(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((lar1::NtupleReprocessing*) G__getstructoffset())->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Show((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((lar1::NtupleReprocessing*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((lar1::NtupleReprocessing*) G__getstructoffset())->InFile();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lar1::NtupleReprocessing*) G__getstructoffset())->CalcLepton((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lar1::NtupleReprocessing*) G__getstructoffset())->DisableOscSign((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lar1::NtupleReprocessing*) G__getstructoffset())->DisableDetSign((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UBOscCint_644_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lar1::NtupleReprocessing*) G__getstructoffset())->SetSpecialNameText(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UBOscCint_644_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lar1::NtupleReprocessing* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lar1::NtupleReprocessing(*(lar1::NtupleReprocessing*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLNtupleReprocessing));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lar1::NtupleReprocessing G__Tlar1cLcLNtupleReprocessing;
static int G__UBOscCint_644_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lar1::NtupleReprocessing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lar1::NtupleReprocessing*) (soff+(sizeof(lar1::NtupleReprocessing)*i)))->~G__Tlar1cLcLNtupleReprocessing();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lar1::NtupleReprocessing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lar1::NtupleReprocessing*) (soff))->~G__Tlar1cLcLNtupleReprocessing();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UBOscCint_644_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lar1::NtupleReprocessing* dest = (lar1::NtupleReprocessing*) G__getstructoffset();
   *dest = *(lar1::NtupleReprocessing*) libp->para[0].ref;
   const lar1::NtupleReprocessing& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UBOsc */
static int G__UBOscCint_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UBOsc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UBOsc[n];
     } else {
       p = new((void*) gvp) UBOsc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UBOsc;
     } else {
       p = new((void*) gvp) UBOsc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_UBOsc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UBOscCint_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   UBOsc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new UBOsc(*(UBOsc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UBOscCintLN_UBOsc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UBOsc G__TUBOsc;
static int G__UBOscCint_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (UBOsc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((UBOsc*) (soff+(sizeof(UBOsc)*i)))->~G__TUBOsc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (UBOsc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((UBOsc*) (soff))->~G__TUBOsc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UBOscCint_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UBOsc* dest = (UBOsc*) G__getstructoffset();
   *dest = *(UBOsc*) libp->para[0].ref;
   const UBOsc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* lar1::FluxRW */

/* lar1::FluxRWnubar */

/* gan::LorentzVectorLight */

/* lar1::Utils */

/* lar1::NtupleReprocessing */

/* UBOsc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncUBOscCint {
 public:
  G__Sizep2memfuncUBOscCint(): p(&G__Sizep2memfuncUBOscCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncUBOscCint::*p)();
};

size_t G__get_sizep2memfuncUBOscCint()
{
  G__Sizep2memfuncUBOscCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceUBOscCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableUBOscCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__UBOscCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__UBOscCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__UBOscCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__UBOscCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__UBOscCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<gan::LorentzVectorLight>",117,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UBOscCintLN_reverse_iteratorlEvectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* lar1::FluxRW */
static void G__setup_memvarlar1cLcLFluxRW(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW));
   { lar1::FluxRW *p; p=(lar1::FluxRW*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBinSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fGS[4][4]=",0,"fGS[ntype][ptype]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fMB[4][4]=",0,"fMB[ntype][ptype]");
   }
   G__tag_memvar_reset();
}


   /* lar1::FluxRWnubar */
static void G__setup_memvarlar1cLcLFluxRWnubar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar));
   { lar1::FluxRWnubar *p; p=(lar1::FluxRWnubar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBinSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fGS[4][4]=",0,"fGS[ntype][ptype]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fMB[4][4]=",0,"fMB[ntype][ptype]");
   }
   G__tag_memvar_reset();
}


   /* gan::LorentzVectorLight */
static void G__setup_memvargancLcLLorentzVectorLight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight));
   { gan::LorentzVectorLight *p; p=(gan::LorentzVectorLight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fT=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lar1::Utils */
static void G__setup_memvarlar1cLcLUtils(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils));
   { lar1::Utils *p; p=(lar1::Utils*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW),-1,-1,4,"fluxrw_nu=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar),-1,-1,4,"fluxrw_nubar=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PotNormNubar=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PotNormNu=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kNu=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kNu_Fosc=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kNubar=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kNubar_Fosc=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kND=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kUB=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kFD=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kMB=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kIC=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kND_long=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kIC_600=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"kIC_800=7LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fidCut_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fidCut_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fidCut_zUp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fidCut_zDown=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_xmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_ymax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_zmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_zmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_long_xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_long_xmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_long_ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_long_ymax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_long_zmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"nd_long_zmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ub_xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ub_xmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ub_ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ub_ymax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ub_zmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ub_zmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fd_xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fd_xmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fd_ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fd_ymax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fd_zmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fd_zmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ic_xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ic_xmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ic_ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ic_ymax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ic_zmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ic_zmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TVector3),-1,-1,4,"kMB_center=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kMB_radius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"kMB_fidcut=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lar1::NtupleReprocessing */
static void G__setup_memvarlar1cLcLNtupleReprocessing(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLNtupleReprocessing));
   { lar1::NtupleReprocessing *p; p=(lar1::NtupleReprocessing*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->infile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TFile),-1,-1,1,"infile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->iflux)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"iflux=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ibkg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ibkg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuchan)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nuchan=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"inno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->enugen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"enugen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuleng)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nuleng=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->parid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"parid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ndecay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ndecay=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wgt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"wgt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPi0)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NPi0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPi0FinalState)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NPi0FinalState=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NGamma)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NGamma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FoundPhotons)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"FoundPhotons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isCC)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"isCC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->geniePDG)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"geniePDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->genieE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"genieE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->geniePx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"geniePx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->geniePy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"geniePy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->geniePz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"geniePz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParVx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ParVx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParVy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ParVy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParVz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ParVz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ParPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ParPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ParPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LepPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LepPx=",0,"Added these to store the lepton mometum.");
   G__memvar_setup((void*)((long)(&p->LepPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LepPy=",0,"Added these to store the lepton mometum.");
   G__memvar_setup((void*)((long)(&p->LepPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LepPz=",0,"Added these to store the lepton mometum.");
   G__memvar_setup((void*)((long)(&p->LepAngle)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LepAngle=",0,"This will store the scattering angle between lepton and neutrino.");
   G__memvar_setup((void*)((long)(&p->ThetaLep)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ThetaLep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PhiLep)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PhiLep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThetaLepSmeared)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ThetaLepSmeared=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PhiLepSmeared)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PhiLepSmeared=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Elep)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Elep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ElepSmeared)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ElepSmeared=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"MuonPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MuonMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"MuonMom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p1PhotonConversionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"p1PhotonConversionPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p1PhotonConversionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"p1PhotonConversionMom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p2PhotonConversionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"p2PhotonConversionPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p2PhotonConversionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"p2PhotonConversionMom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->miscPhotonConversionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"miscPhotonConversionPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->miscPhotonConversionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"miscPhotonConversionMom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"PionPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR),G__defined_typename("vector<gan::LorentzVectorLight>"),-1,1,"PionMom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_iflux)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_iflux=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ibkg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ibkg=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nuchan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_nuchan=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_inno)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_inno=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_enugen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_enugen=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nuleng)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_nuleng=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_parid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_parid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ndecay)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ndecay=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_wgt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_wgt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_NPi0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_NPi0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_NPi0FinalState)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_NPi0FinalState=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_NGamma)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_NGamma=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_FoundAllPhotons)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_FoundAllPhotons=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_isCC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_isCC=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mode)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_mode=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Vx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_Vx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Vy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_Vy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Vz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_Vz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ParVx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ParVx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ParVy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ParVy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ParVz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ParVz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ParPx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ParPx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ParPy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ParPy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ParPz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ParPz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_geniePDG)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_geniePDG=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_genieE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_genieE=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_geniePx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_geniePx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_geniePy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_geniePy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_geniePz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_geniePz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ThetaLep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ThetaLep=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PhiLep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_PhiLep=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ThetaLepSmeared)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ThetaLepSmeared=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PhiLepSmeared)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_PhiLepSmeared=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Elep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_Elep=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ElepSmeared)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_ElepSmeared=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_MuonPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_MuonPos=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_MuonMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_MuonMom=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_p1PhotonConversionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_p1PhotonConversionPos=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_p1PhotonConversionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_p1PhotonConversionMom=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_p2PhotonConversionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_p2PhotonConversionPos=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_p2PhotonConversionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_p2PhotonConversionMom=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_miscPhotonConversionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_miscPhotonConversionPos=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_miscPhotonConversionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_miscPhotonConversionMom=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PionPos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_PionPos=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PionMom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__UBOscCintLN_TBranch),-1,-1,1,"b_PionMom=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->utils)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils),-1,-1,1,"utils=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->oscNeutrinos)-(long)(p)),103,0,0,-1,-1,-1,1,"oscNeutrinos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->oscAntiNeutrinos)-(long)(p)),103,0,0,-1,-1,-1,1,"oscAntiNeutrinos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detNeutrinos)-(long)(p)),103,0,0,-1,-1,-1,1,"detNeutrinos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detAntiNeutrinos)-(long)(p)),103,0,0,-1,-1,-1,1,"detAntiNeutrinos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->specialNameText)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__UBOscCintLN_string),-1,-1,1,"specialNameText=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UBOsc */
static void G__setup_memvarUBOsc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UBOscCintLN_UBOsc));
   { UBOsc *p; p=(UBOsc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarUBOscCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfunclar1cLcLFluxRW(void) {
   /* lar1::FluxRW */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW));
   G__memfunc_setup("FluxRW",584,G__UBOscCint_170_0_1, 105, G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__UBOscCint_170_0_2, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - energy i - 'Int_t' 0 - ntype "
"i - 'Int_t' 0 - ptype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeightHist",1312,G__UBOscCint_170_0_3, 85, G__get_linked_tagnum(&G__UBOscCintLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ntype i - 'Int_t' 0 - ptype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnv",585,G__UBOscCint_170_0_4, 117, G__get_linked_tagnum(&G__UBOscCintLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - var", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FluxRW", 584, G__UBOscCint_170_0_5, (int) ('i'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW), -1, 0, 1, 1, 1, 0, "u 'lar1::FluxRW' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FluxRW", 710, G__UBOscCint_170_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UBOscCint_170_0_7, (int) ('u'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRW), -1, 1, 1, 1, 1, 0, "u 'lar1::FluxRW' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclar1cLcLFluxRWnubar(void) {
   /* lar1::FluxRWnubar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar));
   G__memfunc_setup("FluxRWnubar",1120,G__UBOscCint_171_0_1, 105, G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__UBOscCint_171_0_2, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - energy i - 'Int_t' 0 - ntype "
"i - 'Int_t' 0 - ptype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeightHist",1312,G__UBOscCint_171_0_3, 85, G__get_linked_tagnum(&G__UBOscCintLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ntype i - 'Int_t' 0 - ptype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnv",585,G__UBOscCint_171_0_4, 117, G__get_linked_tagnum(&G__UBOscCintLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - var", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FluxRWnubar", 1120, G__UBOscCint_171_0_5, (int) ('i'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar), -1, 0, 1, 1, 1, 0, "u 'lar1::FluxRWnubar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FluxRWnubar", 1246, G__UBOscCint_171_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UBOscCint_171_0_7, (int) ('u'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLFluxRWnubar), -1, 1, 1, 1, 1, 0, "u 'lar1::FluxRWnubar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgancLcLLorentzVectorLight(void) {
   /* gan::LorentzVectorLight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight));
   G__memfunc_setup("LorentzVectorLight",1881,G__UBOscCint_230_0_1, 105, G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LorentzVectorLight",1881,G__UBOscCint_230_0_2, 105, G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight), -1, 0, 4, 1, 1, 0, 
"f - - 0 - - f - - 0 - - "
"f - - 0 - - f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LorentzVectorLight",1881,G__UBOscCint_230_0_3, 105, G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LorentzVectorLight",1881,G__UBOscCint_230_0_4, 105, G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__UBOscCint_230_0_5, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__UBOscCint_230_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__UBOscCint_230_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__UBOscCint_230_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Px",200,G__UBOscCint_230_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Py",201,G__UBOscCint_230_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pz",202,G__UBOscCint_230_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__UBOscCint_230_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__UBOscCint_230_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__UBOscCint_230_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__UBOscCint_230_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT",384,G__UBOscCint_230_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__UBOscCint_230_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__UBOscCint_230_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__UBOscCint_230_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__UBOscCint_230_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("LorentzVectorLight", 1881, G__UBOscCint_230_0_21, (int) ('i'), G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight), -1, 0, 1, 1, 1, 0, "u 'gan::LorentzVectorLight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LorentzVectorLight", 2007, G__UBOscCint_230_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UBOscCint_230_0_23, (int) ('u'), G__get_linked_tagnum(&G__UBOscCintLN_gancLcLLorentzVectorLight), -1, 1, 1, 1, 1, 0, "u 'gan::LorentzVectorLight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclar1cLcLUtils(void) {
   /* lar1::Utils */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils));
   G__memfunc_setup("Utils",529,G__UBOscCint_635_0_1, 105, G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFluxWeight",1319,G__UBOscCint_635_0_2, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - energy i - 'Int_t' 0 - iflux "
"i - 'Int_t' 0 - inno i - 'Int_t' 0 - ndecay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__UBOscCint_635_0_3, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - mom u 'TVector3' - 0 'TVector3(0,0,1)' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__UBOscCint_635_0_4, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz u 'TVector3' - 0 'TVector3(0,0,1)' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__UBOscCint_635_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - mom u 'TVector3' - 0 'TVector3(0,0,1)' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__UBOscCint_635_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NuEnergyCCQE",1097,G__UBOscCint_635_0_7, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - l_energy d - 'Double_t' 0 - l_p "
"d - 'Double_t' 0 - l_theta d - 'Double_t' 0 - mass "
"i - 'Int_t' 0 - mode g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NuEnergyCalo",1196,G__UBOscCint_635_0_8, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"U 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - pdg U 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - energy "
"g - 'Bool_t' 0 'false' include_neutrons g - 'Bool_t' 0 'false' include_pizeros "
"d - 'Double_t' 0 '0' prot_thresh g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VertexEnergy",1256,G__UBOscCint_635_0_9, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 0, 
"U 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - pdg U 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - energy "
"d - 'Double_t' 0 '0.0' prot_thresh d - 'Double_t' 0 '0.0' pion_thresh "
"g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TotalPhotonEnergy",1766,G__UBOscCint_635_0_10, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - idet U 'vector<gan::LorentzVectorLight,allocator<gan::LorentzVectorLight> >' 'vector<gan::LorentzVectorLight>' 0 - p1pos "
"U 'vector<gan::LorentzVectorLight,allocator<gan::LorentzVectorLight> >' 'vector<gan::LorentzVectorLight>' 0 - p1mom U 'vector<gan::LorentzVectorLight,allocator<gan::LorentzVectorLight> >' 'vector<gan::LorentzVectorLight>' 0 - p2pos "
"U 'vector<gan::LorentzVectorLight,allocator<gan::LorentzVectorLight> >' 'vector<gan::LorentzVectorLight>' 0 - p2mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFiducial",989,G__UBOscCint_635_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - idet u 'TVector3' - 0 - vtx "
"d - 'Double_t' 0 '17.0' fidCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__UBOscCint_635_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - idet u 'TVector3' - 0 - vtx "
"d - - 0 '0' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFiducialMB",1132,G__UBOscCint_635_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - idet u 'TVector3' - 0 - vtx "
"d - 'Double_t' 0 '17.0' fidCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFidMass",967,G__UBOscCint_635_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActiveMass",1296,G__UBOscCint_635_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetBoundary",1409,G__UBOscCint_635_0_16, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - idet d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - zmin "
"d - 'Double_t' 1 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOTNorm",943,G__UBOscCint_635_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - iflux i - 'Int_t' 0 - iDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPOTNormNuMI",1288,G__UBOscCint_635_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - iflux i - 'Int_t' 0 - iDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContainedLength",1815,G__UBOscCint_635_0_19, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 0 - startPoint u 'TVector3' - 0 - startDir "
"i - - 0 - idet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleFarDet",1054,G__UBOscCint_635_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '1' scaleFactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntersectsPlane",1556,G__UBOscCint_635_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 8, 
"u 'TVector3' - 11 - startPos u 'TVector3' - 11 - startDir "
"u 'TVector3' - 11 - planeCorner1 u 'TVector3' - 11 - planeCorner2 "
"u 'TVector3' - 11 - planeCorner3 g - - 10 'false' verbose", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Utils", 529, G__UBOscCint_635_0_22, (int) ('i'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils), -1, 0, 1, 1, 1, 0, "u 'lar1::Utils' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Utils", 655, G__UBOscCint_635_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UBOscCint_635_0_24, (int) ('u'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLUtils), -1, 1, 1, 1, 1, 0, "u 'lar1::Utils' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclar1cLcLNtupleReprocessing(void) {
   /* lar1::NtupleReprocessing */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLNtupleReprocessing));
   G__memfunc_setup("NtupleReprocessing",1900,G__UBOscCint_644_0_1, 105, G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLNtupleReprocessing), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut",300,G__UBOscCint_644_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,G__UBOscCint_644_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__UBOscCint_644_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__UBOscCint_644_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__UBOscCint_644_0_6, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - - i - 'Int_t' 0 '1' iDet "
"n - 'Long64_t' 0 '-1' max_entry g - - 0 'false' verbose "
"d - - 0 '1' scale", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,G__UBOscCint_644_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__UBOscCint_644_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InFile",567,G__UBOscCint_644_0_9, 117, G__get_linked_tagnum(&G__UBOscCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcLepton",997,G__UBOscCint_644_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - detect_dist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisableOscSign",1386,G__UBOscCint_644_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - sign", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisableDetSign",1378,G__UBOscCint_644_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - sign", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSpecialNameText",1811,G__UBOscCint_644_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - s", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("NtupleReprocessing", 1900, G__UBOscCint_644_0_14, (int) ('i'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLNtupleReprocessing), -1, 0, 1, 1, 1, 0, "u 'lar1::NtupleReprocessing' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NtupleReprocessing", 2026, G__UBOscCint_644_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UBOscCint_644_0_16, (int) ('u'), G__get_linked_tagnum(&G__UBOscCintLN_lar1cLcLNtupleReprocessing), -1, 1, 1, 1, 1, 0, "u 'lar1::NtupleReprocessing' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUBOsc(void) {
   /* UBOsc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UBOscCintLN_UBOsc));
   G__memfunc_setup("UBOsc",444,G__UBOscCint_645_0_1, 105, G__get_linked_tagnum(&G__UBOscCintLN_UBOsc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("UBOsc", 444, G__UBOscCint_645_0_2, (int) ('i'), G__get_linked_tagnum(&G__UBOscCintLN_UBOsc), -1, 0, 1, 1, 1, 0, "u 'UBOsc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UBOsc", 570, G__UBOscCint_645_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__UBOscCint_645_0_4, (int) ('u'), G__get_linked_tagnum(&G__UBOscCintLN_UBOsc), -1, 1, 1, 1, 1, 0, "u 'UBOsc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncUBOscCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalUBOscCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcUBOscCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__UBOscCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_lar1 = { "lar1" , 110 , -1 };
G__linked_taginfo G__UBOscCintLN_lar1cLcLFluxRW = { "lar1::FluxRW" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_lar1cLcLFluxRWnubar = { "lar1::FluxRWnubar" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_gan = { "gan" , 110 , -1 };
G__linked_taginfo G__UBOscCintLN_gancLcLLorentzVectorLight = { "gan::LorentzVectorLight" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__UBOscCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_lar1cLcLUtils = { "lar1::Utils" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR = { "vector<gan::LorentzVectorLight,allocator<gan::LorentzVectorLight> >" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_reverse_iteratorlEvectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<gan::LorentzVectorLight,allocator<gan::LorentzVectorLight> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_lar1cLcLNtupleReprocessing = { "lar1::NtupleReprocessing" , 99 , -1 };
G__linked_taginfo G__UBOscCintLN_UBOsc = { "UBOsc" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableUBOscCint() {
  G__UBOscCintLN_TString.tagnum = -1 ;
  G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__UBOscCintLN_string.tagnum = -1 ;
  G__UBOscCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__UBOscCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UBOscCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__UBOscCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UBOscCintLN_TH1D.tagnum = -1 ;
  G__UBOscCintLN_lar1.tagnum = -1 ;
  G__UBOscCintLN_lar1cLcLFluxRW.tagnum = -1 ;
  G__UBOscCintLN_lar1cLcLFluxRWnubar.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__UBOscCintLN_TVector3.tagnum = -1 ;
  G__UBOscCintLN_TLorentzVector.tagnum = -1 ;
  G__UBOscCintLN_gan.tagnum = -1 ;
  G__UBOscCintLN_gancLcLLorentzVectorLight.tagnum = -1 ;
  G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__UBOscCintLN_TFile.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TTree.tagnum = -1 ;
  G__UBOscCintLN_TBranch.tagnum = -1 ;
  G__UBOscCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__UBOscCintLN_lar1cLcLUtils.tagnum = -1 ;
  G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__UBOscCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR.tagnum = -1 ;
  G__UBOscCintLN_reverse_iteratorlEvectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UBOscCintLN_lar1cLcLNtupleReprocessing.tagnum = -1 ;
  G__UBOscCintLN_UBOsc.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableUBOscCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TString);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_string);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_lar1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UBOscCintLN_lar1cLcLFluxRW),sizeof(lar1::FluxRW),-1,263424,(char*)NULL,G__setup_memvarlar1cLcLFluxRW,G__setup_memfunclar1cLcLFluxRW);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UBOscCintLN_lar1cLcLFluxRWnubar),sizeof(lar1::FluxRWnubar),-1,263424,(char*)NULL,G__setup_memvarlar1cLcLFluxRWnubar,G__setup_memfunclar1cLcLFluxRWnubar);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_gan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UBOscCintLN_gancLcLLorentzVectorLight),sizeof(gan::LorentzVectorLight),-1,295168,(char*)NULL,G__setup_memvargancLcLLorentzVectorLight,G__setup_memfuncgancLcLLorentzVectorLight);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TTree);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TBranch);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UBOscCintLN_lar1cLcLUtils),sizeof(lar1::Utils),-1,263424,(char*)NULL,G__setup_memvarlar1cLcLUtils,G__setup_memfunclar1cLcLUtils);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_vectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgR);
   G__get_linked_tagnum_fwd(&G__UBOscCintLN_reverse_iteratorlEvectorlEgancLcLLorentzVectorLightcOallocatorlEgancLcLLorentzVectorLightgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UBOscCintLN_lar1cLcLNtupleReprocessing),sizeof(lar1::NtupleReprocessing),-1,263424,(char*)NULL,G__setup_memvarlar1cLcLNtupleReprocessing,G__setup_memfunclar1cLcLNtupleReprocessing);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UBOscCintLN_UBOsc),sizeof(UBOsc),-1,263424,(char*)NULL,G__setup_memvarUBOsc,G__setup_memfuncUBOsc);
}
extern "C" void G__cpp_setupUBOscCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupUBOscCint()");
  G__set_cpp_environmentUBOscCint();
  G__cpp_setup_tagtableUBOscCint();

  G__cpp_setup_inheritanceUBOscCint();

  G__cpp_setup_typetableUBOscCint();

  G__cpp_setup_memvarUBOscCint();

  G__cpp_setup_memfuncUBOscCint();
  G__cpp_setup_globalUBOscCint();
  G__cpp_setup_funcUBOscCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncUBOscCint();
  return;
}
class G__cpp_setup_initUBOscCint {
  public:
    G__cpp_setup_initUBOscCint() { G__add_setup_func("UBOscCint",(G__incsetup)(&G__cpp_setupUBOscCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initUBOscCint() { G__remove_setup_func("UBOscCint"); }
};
G__cpp_setup_initUBOscCint G__cpp_setup_initializerUBOscCint;

